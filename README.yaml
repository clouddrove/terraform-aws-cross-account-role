---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform AWS Cross Account Role

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-cross-account-role

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-cross-account-role/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-cross-account-role/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-cross-account-role/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-cross-account-role/actions/workflows/terraform.yml"

#  description of this project
description: |-
  This terraform module is used for creating an IAM Role which can give permission to another AWS account for accessing it's inventory.
# extra content
include:
  - "terraform.md"

# How to use this project
usage : |-
  ### Simple Example
  Here are an example of how you can use this module in your inventory structure:
  ```hcl
      module "cross-access-role" {
      source            = "clouddrove/cross-account-role/aws"
      version           = "1.0.1"
      name              = "iam-role"
      environment       = "test"
      label_order       = ["environment", "name", "application"]
      master_account_id = "xxxxxxxxxx"
      policy_arn        = "arn:aws:iam::aws:policy/AdministratorAccess"
      }
  ```